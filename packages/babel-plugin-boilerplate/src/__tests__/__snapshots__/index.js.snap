// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`prototype-prop-define on array: on array 1`] = `

const x = []
x.splice = () => true

      ↓ ↓ ↓ ↓ ↓ ↓

const x = [];
Object.defineProperty(x, "splice", {
  value: () => true,
  writable: true,
  enumerable: true,
  configurable: true
});

`;

exports[`prototype-prop-define on function: on function 1`] = `

const x = () => {}
x.bind = () => true

      ↓ ↓ ↓ ↓ ↓ ↓

const x = () => {};
Object.defineProperty(x, "bind", {
  value: () => true,
  writable: true,
  enumerable: true,
  configurable: true
});

`;

exports[`prototype-prop-define on object: on object 1`] = `

const x = {}
x.toString = () => true

      ↓ ↓ ↓ ↓ ↓ ↓

const x = {};
Object.defineProperty(x, "toString", {
  value: () => true,
  writable: true,
  enumerable: true,
  configurable: true
});

`;

exports[`prototype-prop-define on prototype: on prototype 1`] = `

function MyClass () {}
MyClass.prototype.toString = () => true

      ↓ ↓ ↓ ↓ ↓ ↓

function MyClass() {}
Object.defineProperty(MyClass.prototype, "toString", {
  value: () => true,
  writable: true,
  enumerable: true,
  configurable: true
});

`;

exports[`prototype-prop-define should ignore: should ignore 1`] = `

const x = {}
x.a = () => true

      ↓ ↓ ↓ ↓ ↓ ↓

const x = {};
x.a = () => true;

`;
